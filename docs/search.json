[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "QTM 350: Data Science Computing",
    "section": "",
    "text": "This course equips students with computing skills and knowledge for data science applications. Students will gain knowledge foundations and hands-on experience with technologies such as Version Control, Project Collaboration, Data Structures and Algorithms, Database Designs, Database Management, and Cloud Computing. Prospective data scientists, statisticians, and other quantitative professionals will learn how to efficiently utilize database structures and foundational cloud services for data science by completing creative projects."
  },
  {
    "objectID": "index.html#course-description",
    "href": "index.html#course-description",
    "title": "QTM 350: Data Science Computing",
    "section": "",
    "text": "This course equips students with computing skills and knowledge for data science applications. Students will gain knowledge foundations and hands-on experience with technologies such as Version Control, Project Collaboration, Data Structures and Algorithms, Database Designs, Database Management, and Cloud Computing. Prospective data scientists, statisticians, and other quantitative professionals will learn how to efficiently utilize database structures and foundational cloud services for data science by completing creative projects."
  },
  {
    "objectID": "index.html#instructor-and-tas",
    "href": "index.html#instructor-and-tas",
    "title": "QTM 350: Data Science Computing",
    "section": "Instructor and TAs",
    "text": "Instructor and TAs\n\nInstructor: Professor Davi Moreira\n\nEmail: davi.moreira@emory.edu\nOffice hours: Tuesdays, 9:15am - 10:15am, or by appointment\n\nZoom link in your Course Canvas Page.\n\n\n\n\nTeaching Assistant: Michael Cao\n\nEmail: michael.cao@emory.edu\nOffice Hours: Mondays, 6-7 pm\n\nZoom link in your Course Canvas Page."
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "QTM 350: Data Science Computing",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this course, students will be able to:\n\nDemonstrate proficiency in data science project collaboration and version control.\nUtilize advanced data storage, manipulation, and querying.\nHigh-level understanding of data structures, algorithms, and cloud computing concepts.\nCritically navigate the emergent trends in data science computing."
  },
  {
    "objectID": "index.html#objectives",
    "href": "index.html#objectives",
    "title": "QTM 350: Data Science Computing",
    "section": "Objectives",
    "text": "Objectives\n\nConceptual Understanding: To provide students with a foundational grasp of data structures, algorithms, and data modeling techniques pertinent to SQL and NoSQL databases and data analytics.\nTechnical Proficiency: To equip students with practical skills in version control, Python programming, and database management using SQL and MySQL, enabling them to execute data manipulation and analysis tasks proficiently.\nCloud Computing Literacy: To introduce students to the fundamentals of cloud computing, focusing on models, components, and security considerations, and offer hands-on experience.\nCritical Integrated Learning: To offer a holistic educational experience that combines theoretical learning with practice, ensuring students can apply their knowledge to real-world projects and foster an awareness of emerging trends in the data science computing landscape.\n\n\nCourse Infra-structure\nCourse Website: This class website will be used throughout the course and should be checked on a regular basis for lecture materials and required readings.\nCanvas: The course Canvas site http://canvas.emory.edu should be checked on a regular basis for announcements and course material.."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Week\nTopic\nTitle\nDate\n\n\n\n\nWeek 01\nTopic 01\nIntroduction, Syllabus and Set up\nJan 18\n\n\nWeek 02\nTopic 02\nComputational Literacy, Command Line, and Version Control\nJan 23\n\n\nWeek 02\nTopic 02\nComputational Literacy, Command Line, and Version Control\nJan 25\n\n\nWeek 03\nTopic 02\nComputational Literacy, Command Line, and Version Control\nJan 30\n\n\nWeek 03\nTopic 03\nPython essentials\nFeb 1\n\n\nWeek 04\nTopic 03\nPython essentials\nFeb 6\n\n\nWeek 04\nTopic 03\nPython essentials\nFeb 8\n\n\nWeek 05\nTopic 04\nAPI Interactions and Web Scraping\nFeb 13\n\n\nWeek 05\nTopic 04\nAPI Interactions and Web Scraping\nFeb 15\n\n\nWeek 06\nTopic 05\nOverview of Data Structure and Algorithms\nFeb 20\n\n\nWeek 06\nTopic 05\nOverview of Data Structure and Algorithms\nFeb 22\n\n\nWeek 07\nTopic 06\nSQL Operations and Operators\nFeb 27\n\n\nWeek 07\nTopic 06\nSQL Operations and Operators\nFeb 29\n\n\nWeek 08\nTopic 06\nSQL Operations and Operators\nMar 5\n\n\nWeek 08\nTopic 06\nSQL Operations and Operators\nMar 7\n\n\nWeek 09\n-\nSpring Break (no classes, no office hours)\nMar 12\n\n\nWeek 09\n-\nSpring Break (no classes, no office hours)\nMar 14\n\n\nWeek 10\nTopic 07\nNoSQL\nMar 19\n\n\nWeek 10\nTopic 07\nNoSQL\nMar 21\n\n\nWeek 11\nTopic 08\nDatabase Design, Structures and Management\nMar 26\n\n\nWeek 11\nTopic 08\nDatabase Design, Structures and Management\nMar 28\n\n\nWeek 12\nTopic 09\nCreate, Populate and Manipulate databases\nApr 2\n\n\nWeek 12\nTopic 09\nCreate, Populate and Manipulate databases\nApr 4\n\n\nWeek 13\nTopic 10\nCloud Computing and Data Bases\nApr 9\n\n\nWeek 13\nTopic 10\nCloud Computing and Data Bases\nApr 11\n\n\nWeek 14\nTopic 10\nCloud Computing and Data Bases\nApr 16\n\n\nWeek 14\nTopic 10\nCloud Computing and Data Bases\nApr 18\n\n\nWeek 15\nTopic 11\nFinal Project\nApr 23\n\n\nWeek 15\nTopic 11\nFinal Project\nApr 25"
  },
  {
    "objectID": "problem_sets/ps01/ps01.html",
    "href": "problem_sets/ps01/ps01.html",
    "title": "Problem Set 1",
    "section": "",
    "text": "Github Classroom Link"
  },
  {
    "objectID": "problem_sets/ps01/ps01.html#materials",
    "href": "problem_sets/ps01/ps01.html#materials",
    "title": "Problem Set 1",
    "section": "",
    "text": "Github Classroom Link"
  },
  {
    "objectID": "lecture_material/material-topic-01/example_py.html",
    "href": "lecture_material/material-topic-01/example_py.html",
    "title": "My Quarto Document",
    "section": "",
    "text": "# Your Python code here\nprint(\"Hello, Quarto!\")\n\nHello, Quarto!"
  },
  {
    "objectID": "lecture_material/material-topic-01/intro-to-quarto.html",
    "href": "lecture_material/material-topic-01/intro-to-quarto.html",
    "title": "Topic 1: Introduction to Quarto for Python",
    "section": "",
    "text": "The document offers a short guide on utilizing Quarto effectively for data science projects with R and Python.[1]"
  },
  {
    "objectID": "lecture_material/material-topic-01/intro-to-quarto.html#quick-tutorial-for-rstudio",
    "href": "lecture_material/material-topic-01/intro-to-quarto.html#quick-tutorial-for-rstudio",
    "title": "Topic 1: Introduction to Quarto for Python",
    "section": "Quick tutorial for RStudio",
    "text": "Quick tutorial for RStudio\nThis is what RStudio looks like when you open it for the first time.\n\n\n\n\n\nTop left pane (input/script)\nThis is your code editor. Here you enter code in any file type (.py, .r, .qmd) you are working on. If not working with notebooks, this is just gonna be a plain text file but with a extension that run the commands.\nFor example, enter 2 + 2 in your script and run a line of code by pressing command + enter (Mac) or Ctrl + enter (PC). This is a huge advantage of Rstudio over Jupyter. You can run your code line by line, instead of running the entire cell.\nBottom left pane (output/console)\nThis is the console. It is pretty much like when you open Python/R from the Command line.\nIn the console, the prompt &gt; looks like a greater than symbol. If your prompt begins to look like a + symbol by mistake, simply click in your console and press the esc key on your keyboard as many times as necessary to return to the prompt.\nRstudio uses + when code is broken up across multiple lines and is still expecting more code. A line of code does not usually end until Rstudio finds an appropriate stop parameter or punctuation that completes some code such as a closed round parenthesis ), square bracket ], curly brace }, or quotation mark '.\nIf the output in your console gets too messy, you can clear it by pressing control + l on both Mac and PC. This will not erase any saved data - it will simply make your console easier to read.\nTop right pane (global environment)\nThis is your environment pane. All objects you create will be displayed here.\nBottom right pane (files, plots, packages, and help)\nHere you find useful tabs for navigating your file system, displaying plots, installing packages, and viewing help pages. Press the control key and a number (1 through 9) on your keyboard to shortcut between these panes and tabs."
  },
  {
    "objectID": "problemset.html",
    "href": "problemset.html",
    "title": "Problem Sets",
    "section": "",
    "text": "Problem Set\n\n\nContent\n\n\nDate Assigned\n\n\nDue Date\n\n\n\n\n\n\nProblem Set 1\n\n\nXXXX\n\n\nMM/DD/YYYY\n\n\nXXXX\n\n\n\n\nProblem Set 2\n\n\nXXXX\n\n\nMM/DD/YYYY\n\n\nXXXX\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "topics-pages/page-topic-08.html",
    "href": "topics-pages/page-topic-08.html",
    "title": "Topic 08",
    "section": "",
    "text": "Lectures Notes:\n\nXXX\nXXX\n\n\n\nSlides\n\nTopic 01:Introduction, Set up, IDEs, Command line\n\n\n\nReadings\nXXXX\nRequired Readings\n\nXXX\nXXX\n\nReadings\n\nXXXX\n\nAdditional\n\nXXX"
  },
  {
    "objectID": "topics-pages/page-topic-11.html",
    "href": "topics-pages/page-topic-11.html",
    "title": "Topic 11",
    "section": "",
    "text": "Lectures Notes:\n\nXXX\nXXX\n\n\n\nSlides\n\nTopic 01:Introduction, Set up, IDEs, Command line\n\n\n\nReadings\nXXXX\nRequired Readings\n\nXXX\nXXX\n\nReadings\n\nXXXX\n\nAdditional\n\nXXX"
  },
  {
    "objectID": "topics-pages/page-topic-04.html",
    "href": "topics-pages/page-topic-04.html",
    "title": "Topic 04",
    "section": "",
    "text": "Lectures Notes:\n\nXXX\nXXX\n\n\n\nSlides\n\nTopic 01:Introduction, Set up, IDEs, Command line\n\n\n\nReadings\nXXXX\nRequired Readings\n\nXXX\nXXX\n\nReadings\n\nXXXX\n\nAdditional\n\nXXX"
  },
  {
    "objectID": "topics-pages/page-topic-07.html",
    "href": "topics-pages/page-topic-07.html",
    "title": "Topic 07",
    "section": "",
    "text": "Lectures Notes:\n\nXXX\nXXX\n\n\n\nSlides\n\nTopic 01:Introduction, Set up, IDEs, Command line\n\n\n\nReadings\nXXXX\nRequired Readings\n\nXXX\nXXX\n\nReadings\n\nXXXX\n\nAdditional\n\nXXX"
  },
  {
    "objectID": "topics-pages/page-topic-02.html",
    "href": "topics-pages/page-topic-02.html",
    "title": "Topic 02",
    "section": "",
    "text": "Slides\n\nComputational Literacy, Command Line, and Version Control\n\n\n\nLecture Material\n\nBasics of Command Line: html,  notebook \nVersion Control: html,  notebook \n\n\n\nProblem Set\n\nTBP\n\n\n\nRequired Readings\n\nThe Plain Person’s Guide to Plain Text Social Science - Healy, Kieran\n\nCh. 1: Introduction;\nCh. 2: Keep a Record;\nCh. 3: Write and Edit;\nCh. 4: Reproduce Work.\n\nPro Git - Chacon & Straub\n\nCh. 1: Getting Started; Read 1.1 - 1.3\nCh. 2: Git Basics; Only read 2.1 - 2.5\nCh. 3: Git Branching\n\n\n\n\nRecommended Readings\n\nEssential Computer Literacy: 50 min.\n\n\n\nAdditional Resources\n\nMore on Git/Github in Pro Git:\n\nRead 1.4 - 1.7 for help on installation and commandline\nRead Ch. 6 for more information regarding Git + Github.\n\nCh. 13 Detect Git from RStudio -Happy Git with R - Bryan, Jenny & Jim Hester"
  },
  {
    "objectID": "topics-pages/page-topic-01.html",
    "href": "topics-pages/page-topic-01.html",
    "title": "Topic 01",
    "section": "",
    "text": "Slides\n\nTopic 01: Introduction, Syllabus and Set up\n\n\n\nLecture Material:\n\nInstructions for setting up the course.\nUsing Jupyter Notebooks: html,  notebook \nUsing Quarto for Python and R html,  notebook \n\n\n\nAdditional Resources\n\nJupyter Notebook for Beginners: A tutorial Pryke, Benjamin - www.dataquest.io\nUsing Python with RStudio and reticulate: here and here\nR & Python: A Love Story - rstudio.com\nRStudio 1.2 Preview: Reticulated Python\nUsing LaTex to write math in markdown - docx2latex.com"
  },
  {
    "objectID": "topics-pages/page-topic-03.html",
    "href": "topics-pages/page-topic-03.html",
    "title": "Topic 03",
    "section": "",
    "text": "Lectures Notes:\n\nXXX\nXXX\n\n\n\nSlides\n\nTopic 01:Introduction, Set up, IDEs, Command line\n\n\n\nReadings\nXXXX\nRequired Readings\n\nXXX\nXXX\n\nReadings\n\nXXXX\n\nAdditional\n\nXXX"
  },
  {
    "objectID": "topics-pages/page-topic-06.html",
    "href": "topics-pages/page-topic-06.html",
    "title": "Topic 06",
    "section": "",
    "text": "Lectures Notes:\n\nXXX\nXXX\n\n\n\nSlides\n\nTopic 01:Introduction, Set up, IDEs, Command line\n\n\n\nReadings\nXXXX\nRequired Readings\n\nXXX\nXXX\n\nReadings\n\nXXXX\n\nAdditional\n\nXXX"
  },
  {
    "objectID": "topics-pages/page-topic-10.html",
    "href": "topics-pages/page-topic-10.html",
    "title": "Topic 10",
    "section": "",
    "text": "Lectures Notes:\n\nXXX\nXXX\n\n\n\nSlides\n\nTopic 01:Introduction, Set up, IDEs, Command line\n\n\n\nReadings\nXXXX\nRequired Readings\n\nXXX\nXXX\n\nReadings\n\nXXXX\n\nAdditional\n\nXXX"
  },
  {
    "objectID": "topics-pages/page-topic-05.html",
    "href": "topics-pages/page-topic-05.html",
    "title": "Topic 05",
    "section": "",
    "text": "Lectures Notes:\n\nXXX\nXXX\n\n\n\nSlides\n\nTopic 01:Introduction, Set up, IDEs, Command line\n\n\n\nReadings\nXXXX\nRequired Readings\n\nXXX\nXXX\n\nReadings\n\nXXXX\n\nAdditional\n\nXXX"
  },
  {
    "objectID": "topics-pages/page-topic-09.html",
    "href": "topics-pages/page-topic-09.html",
    "title": "Topic 09",
    "section": "",
    "text": "Lectures Notes:\n\nXXX\nXXX\n\n\n\nSlides\n\nTopic 01:Introduction, Set up, IDEs, Command line\n\n\n\nReadings\nXXXX\nRequired Readings\n\nXXX\nXXX\n\nReadings\n\nXXXX\n\nAdditional\n\nXXX"
  },
  {
    "objectID": "lecture_material/material-topic-01/quarto_python_example.html",
    "href": "lecture_material/material-topic-01/quarto_python_example.html",
    "title": "Quarto Python Example",
    "section": "",
    "text": "Here you can add your markdown text."
  },
  {
    "objectID": "lecture_material/material-topic-01/quarto_python_example.html#example-of-using-python-with-quarto",
    "href": "lecture_material/material-topic-01/quarto_python_example.html#example-of-using-python-with-quarto",
    "title": "Quarto Python Example",
    "section": "",
    "text": "Here you can add your markdown text."
  },
  {
    "objectID": "lecture_material/material-topic-01/quarto_python_example.html#code",
    "href": "lecture_material/material-topic-01/quarto_python_example.html#code",
    "title": "Quarto Python Example",
    "section": "Code",
    "text": "Code\nIn the code chunk, you just need to change the programming language you want to use inside of the brackets {}\n\n# R code chunck\n\nlibrary(ggplot2)\n\nmu &lt;- 0\nsigma &lt;- 1\nx &lt;- seq(mu - 3*sigma, mu + 3*sigma, length.out = 100)\ny &lt;- dnorm(x, mean = mu, sd = sigma)\ndata &lt;- data.frame(x, y)\n\nggplot(data, aes(x, y)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"Standard Normal Distribution\", x = \"X\", y = \"Density\")\n\n\n\n\n\n# Python code chunck\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\nimport math\n\nmu = 0\nvariance = 1\nsigma = math.sqrt(variance)\nx = np.linspace(mu - 3*sigma, mu + 3*sigma, 100)\nplt.plot(x, stats.norm.pdf(x, mu, sigma))\nplt.show()"
  },
  {
    "objectID": "lecture_material/material-topic-01/course_infrastructure.html",
    "href": "lecture_material/material-topic-01/course_infrastructure.html",
    "title": "Topic 1: Course Set Up",
    "section": "",
    "text": "The document offers a guide about the course infrastructure.[1]"
  },
  {
    "objectID": "lecture_material/material-topic-01/course_infrastructure.html#commandline",
    "href": "lecture_material/material-topic-01/course_infrastructure.html#commandline",
    "title": "Topic 1: Course Set Up",
    "section": "CommandLine",
    "text": "CommandLine\nAt times, we’ll use a unix-based commandline. The commandline will feature into our discussion on using git and also running Python programs. If you use a Mac or a Linux operating system, then a functioning commandline comes with your operating system. For Apple machines, this is the Terminal.\nFor Windows (specifically Windows 10), you can enable Linux Bash shell. The following offers a tutorial on how to do this.\nIf you’re using a version of Windows that pre-dates version 10, then Git Bash offers a program will allow you to use git commands from your windows machine.\nWe will cover some concepts of working with the commandline. You can get a full notebook with a intro to commandline in the materials for Topic 2"
  },
  {
    "objectID": "lecture_material/material-topic-01/course_infrastructure.html#python3",
    "href": "lecture_material/material-topic-01/course_infrastructure.html#python3",
    "title": "Topic 1: Course Set Up",
    "section": "Python3",
    "text": "Python3\nWe’ll use Python3 throughout this course. Below are instructions for downloading Python3 using commandline packages manager (Homebrew for mac, Chocolatey for windows).\n\nInstalling Python3 using Homebrew on a Mac (Apple)\nInstalling Python3 using Chocolatey on a PC (Windows)\n\nAn alternative way to install Python3 is to download an Anaconda distribution. I will use pip rather than conda in the instruction for downloading Python modules. These are simply two ways of downloading and managing open-source software packages. Choose which ever works best for you\nMost computers already have python3 installed. You can check if that is your case through your commandline:\npython3 --version\nOn some versions of Windows, you may need to use py instead of python3:\npy --version\nIn either case, the output of this command should be something like Python 3.8.5"
  },
  {
    "objectID": "lecture_material/material-topic-01/course_infrastructure.html#jupyter-notebooks",
    "href": "lecture_material/material-topic-01/course_infrastructure.html#jupyter-notebooks",
    "title": "Topic 1: Course Set Up",
    "section": "Jupyter Notebooks",
    "text": "Jupyter Notebooks\nOnce you have Python3 on your computer, you can install a Jupyter Notebook. If you downloaded Python3 using Anaconda, then Jupyter Notebook comes with the distribution and requires no further installation on your part. If you are not using Anaconda, you can install Jupyter notebook running the following code using your commandline.\n# on your command line\npip install jupyter\nYou can then activate a Jupyter Notebook from the commandline by typing:\n# on your command line\njupyter notebook\n\nWorkflow to work with Juyter Notebooks using the commandline.\n\nOpen the terminal\nNavigate (using cd) to the folder you want to be the root of your jupyter notebook\nOpen the notebook (jupyter notebook)\n\nIt looks like this if I were to open a notebook in the folder I have for this course\n# open terminal\ncd qtm_350\njupyter notebook\n\n\nWorkflow with Anaconda.\nIf you installed Python using Anaconda distribution system (here: https://www.anaconda.com/products/individual). You can open Jupyter through a point-and-click system.\nIn the lecture notes, you can also find a Introduction to Jupyter notebook."
  },
  {
    "objectID": "lecture_material/material-topic-01/course_infrastructure.html#rstudio-reticulatequarto",
    "href": "lecture_material/material-topic-01/course_infrastructure.html#rstudio-reticulatequarto",
    "title": "Topic 1: Course Set Up",
    "section": "Rstudio + Reticulate|Quarto",
    "text": "Rstudio + Reticulate|Quarto\nIn your classes that are focused on using R, RStudio will be your main IDE. However, RStudio is not just for R. It can handle a number of different languages. We can use Python in RStudio using the reticulate package.\nCheck the intro to quarto notebook on how to use Python in Rstudio. Let’s cover some of the installation steps here:\nTo install RStudio, download from the following link. reticulate is a R package that allows one run a Python REPL in the R console. In addition, it allows one to read in and use Python code, and pass data between R and Python. The following provides instructions on installing reticulate.\nWith reticulate, you can use Rstudio as a IDE for Python. Another option is to use Quarto (the next-generation version of R Markdown) as an unified framework to generate notebooks with text + code. If you are an R Markdown user, you will see how Quarto is just an extension of the capabilities that were previously provided by R Markdown. Now, instead of .rmd files, we have .qmd files. Quarto is already installed with RStudio."
  },
  {
    "objectID": "lecture_material/material-topic-01/course_infrastructure.html#git",
    "href": "lecture_material/material-topic-01/course_infrastructure.html#git",
    "title": "Topic 1: Course Set Up",
    "section": "Git",
    "text": "Git\nGit/GitHub instructions to check before the next session:\n\nInstall Git if it’s not installed already\nCreate a GitHub account if you don’t have one already (any email and free subscription is fine)\n\n1. This document was originally developed by Professor Tiago Ventura and adapted to our courses purposes."
  },
  {
    "objectID": "slides/slides-topic-01.html",
    "href": "slides/slides-topic-01.html",
    "title": " QTM 350: Data Science Computing ",
    "section": "",
    "text": "Introductions\nMotivation\nCourse Overview and Logistics\nSet up\nIDEs\n\nJupyter\nQuarto"
  },
  {
    "objectID": "slides/slides-topic-01.html#topic-overview",
    "href": "slides/slides-topic-01.html#topic-overview",
    "title": " QTM 350: Data Science Computing ",
    "section": "Topic Overview",
    "text": "Topic Overview\n\n\nIntroductions\nMotivation\nCourse Overview and Logistics\nSet up\nIDEs\n\nJupyter\nQuarto"
  },
  {
    "objectID": "slides/slides-topic-01.html#instructor",
    "href": "slides/slides-topic-01.html#instructor",
    "title": " QTM 350: Data Science Computing ",
    "section": "Instructor",
    "text": "Instructor\n\n\n\n\n\n\n\n\n\n\n\ndavi.moreira@emory.edu\nhttps://davi- moreira.github.io/\n\n\nVisiting Assistant Professor in the QTM Department at Emory University;\n\n\n\nMy academic work addresses Political Communication, Data Science, Text as Data, Artificial Intelligence, and Comparative Politics.\n\n\n\nM&E Specialist consultant - World Bank (Brazil, Mozambique, Angola, and DRC)"
  },
  {
    "objectID": "slides/slides-topic-01.html#instructors-passions",
    "href": "slides/slides-topic-01.html#instructors-passions",
    "title": " QTM 350: Data Science Computing ",
    "section": "Instructor’s Passions",
    "text": "Instructor’s Passions"
  },
  {
    "objectID": "slides/slides-topic-01.html#instructors-passions-1",
    "href": "slides/slides-topic-01.html#instructors-passions-1",
    "title": " QTM 350: Data Science Computing ",
    "section": "Instructor’s Passions",
    "text": "Instructor’s Passions"
  },
  {
    "objectID": "slides/slides-topic-01.html#students",
    "href": "slides/slides-topic-01.html#students",
    "title": " QTM 350: Data Science Computing ",
    "section": "Students",
    "text": "Students\n\n\nIt is your turn! - 5 minutes\n\n\n\nPresent yourself to your left/right colleague and tell her/him what are the current two main passions in your life."
  },
  {
    "objectID": "slides/slides-topic-01.html#section",
    "href": "slides/slides-topic-01.html#section",
    "title": " QTM 350: Data Science Computing ",
    "section": "",
    "text": "Large-scale data + algorithms to answer questions"
  },
  {
    "objectID": "slides/slides-topic-01.html#rise-of-the-digital-information-age",
    "href": "slides/slides-topic-01.html#rise-of-the-digital-information-age",
    "title": " QTM 350: Data Science Computing ",
    "section": "Rise of the digital information age",
    "text": "Rise of the digital information age\n\n\n\n\n\n\n\n\n\n\n\nhttps://www.washingtonpost.com/wp-dyn/content/graphic/2011/02/11/GR2011021100614.html"
  },
  {
    "objectID": "slides/slides-topic-01.html#social-media-data",
    "href": "slides/slides-topic-01.html#social-media-data",
    "title": " QTM 350: Data Science Computing ",
    "section": "Social Media Data",
    "text": "Social Media Data"
  },
  {
    "objectID": "slides/slides-topic-01.html#new-data-formats-image-text-videos..",
    "href": "slides/slides-topic-01.html#new-data-formats-image-text-videos..",
    "title": " QTM 350: Data Science Computing ",
    "section": "New Data Formats: Image, text, videos..",
    "text": "New Data Formats: Image, text, videos.."
  },
  {
    "objectID": "slides/slides-topic-01.html#online-research",
    "href": "slides/slides-topic-01.html#online-research",
    "title": " QTM 350: Data Science Computing ",
    "section": "Online Research",
    "text": "Online Research"
  },
  {
    "objectID": "slides/slides-topic-01.html#powerful-and-cheap-computer-power",
    "href": "slides/slides-topic-01.html#powerful-and-cheap-computer-power",
    "title": " QTM 350: Data Science Computing ",
    "section": "Powerful and Cheap Computer Power",
    "text": "Powerful and Cheap Computer Power"
  },
  {
    "objectID": "slides/slides-topic-01.html#as-a-consequence",
    "href": "slides/slides-topic-01.html#as-a-consequence",
    "title": " QTM 350: Data Science Computing ",
    "section": "As a consequence:",
    "text": "As a consequence:\n\nAbundance of data we can use for research and governments can use to make better decisions\n\nNovel research questions\nNew ways to answer old, long-standing research questions\n\nNew technologies also have social implications and can generate important policy questions.\n\nPrivacy issues\nUse of technology by bad actors.\nUse of technology by governments to censor/monitor citizens.\netc…"
  },
  {
    "objectID": "slides/slides-topic-01.html#logistics",
    "href": "slides/slides-topic-01.html#logistics",
    "title": " QTM 350: Data Science Computing ",
    "section": "Logistics",
    "text": "Logistics\n\nSyllabus\nSchedule\nOffice Hours\nMaterials:\n\nhttps://davi-moreira.github.io/2024S_dsc_emory_qtm_350/\nCanvas"
  },
  {
    "objectID": "slides/slides-topic-01.html#jupyter",
    "href": "slides/slides-topic-01.html#jupyter",
    "title": " QTM 350: Data Science Computing ",
    "section": "Jupyter:",
    "text": "Jupyter:\nSee Jupyter Notebook in the Class Website"
  },
  {
    "objectID": "slides/slides-topic-01.html#quarto",
    "href": "slides/slides-topic-01.html#quarto",
    "title": " QTM 350: Data Science Computing ",
    "section": "Quarto",
    "text": "Quarto\nSee Quarto Notebook in the Class Website"
  },
  {
    "objectID": "slides/slides-topic-01.html#summary-1",
    "href": "slides/slides-topic-01.html#summary-1",
    "title": " QTM 350: Data Science Computing ",
    "section": "Summary",
    "text": "Summary\nSome key things to take from this topic:\n\nData Science is about data:\n\nData collection;\nData management;\nData storage;\nData structure;\nData, Data, Data ...\n\nData Science is also about…\n\nCollaboration!\n\nThe schedule is tentative;\nJupiter Notebook will be the main tool of the course, but there are other IDEs:\n\nGoogle Colab\nQuarto"
  },
  {
    "objectID": "problem_sets/ps02/ps02.html",
    "href": "problem_sets/ps02/ps02.html",
    "title": "Problem Set 2",
    "section": "",
    "text": "Github Classroom Link"
  },
  {
    "objectID": "problem_sets/ps02/ps02.html#materials",
    "href": "problem_sets/ps02/ps02.html#materials",
    "title": "Problem Set 2",
    "section": "",
    "text": "Github Classroom Link"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "",
    "text": "This course equips students with computing skills and knowledge for data science applications. Students will gain knowledge foundations and hands-on experience with technologies such as Version Control, Project Collaboration, Data Structures and Algorithms, Database Designs, Database Management, and Cloud Computing. Prospective data scientists, statisticians, and other quantitative professionals will learn how to efficiently utilize database structures and foundational cloud services for data science by completing creative projects.\nCourse Website: https://davi-moreira.github.io/2024S_dsc_emory_qtm_350"
  },
  {
    "objectID": "syllabus.html#course-description",
    "href": "syllabus.html#course-description",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "",
    "text": "This course equips students with computing skills and knowledge for data science applications. Students will gain knowledge foundations and hands-on experience with technologies such as Version Control, Project Collaboration, Data Structures and Algorithms, Database Designs, Database Management, and Cloud Computing. Prospective data scientists, statisticians, and other quantitative professionals will learn how to efficiently utilize database structures and foundational cloud services for data science by completing creative projects.\nCourse Website: https://davi-moreira.github.io/2024S_dsc_emory_qtm_350"
  },
  {
    "objectID": "syllabus.html#instructor-and-tas",
    "href": "syllabus.html#instructor-and-tas",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Instructor and TAs",
    "text": "Instructor and TAs\n\nInstructor: Professor Davi Moreira\n\nEmail: davi.moreira@emory.edu\nOffice hours: Tuesdays, 9:15am - 10:15am, or by appointment\n\nZoom link in your Course Canvas Page.\n\n\n\n\nTeaching Assistant: Michael Cao\n\nEmail: michael.cao@emory.edu\nOffice Hours: Mondays, 6-7 pm\n\nZoom link in your Course Canvas Page."
  },
  {
    "objectID": "syllabus.html#learning-outcomes",
    "href": "syllabus.html#learning-outcomes",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this course, students will be able to:\n\n\nDemonstrate proficiency in data science project collaboration and version control.\n\n\nUtilize advanced data storage, manipulation, and querying.\n\n\nHigh-level understanding of data structures, algorithms, and cloud computing concepts.\n\n\nCritically navigate the emergent trends in data science computing."
  },
  {
    "objectID": "syllabus.html#objectives",
    "href": "syllabus.html#objectives",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Objectives",
    "text": "Objectives\n\nConceptual Understanding: To provide students with a foundational grasp of data structures, algorithms, and data modeling techniques pertinent to SQL and NoSQL databases and data analytics.\nTechnical Proficiency: To equip students with practical skills in version control, Python programming, and database management using SQL and MySQL, enabling them to execute data manipulation and analysis tasks proficiently.\nCloud Computing Literacy: To introduce students to the fundamentals of cloud computing, focusing on models, components, and security considerations, and offer hands-on experience.\nCritical Integrated Learning: To offer a holistic educational experience that combines theoretical learning with practice, ensuring students can apply their knowledge to real-world projects and foster an awareness of emerging trends in the data science computing landscape."
  },
  {
    "objectID": "syllabus.html#course-references",
    "href": "syllabus.html#course-references",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Course References",
    "text": "Course References\n\nComputing Skills for Biologists: A toolbox with basic computational skills necessary for the course.\nElements of Data Science: a digital textbook by Allen Downey written in the form of Jupyter notebooks. It provides an introduction to data science in Python for students with limited programming experience.\nThink Python: An introduction to programming using Python.\nApplied Computing: Applied Computing is an online textbook. It provides an introduction to spreadsheets and SQL. To view the book, students need to register using the course name.\nSQL & NoSQL Databases: Models, Languages, Consistency Options, and Architectures for Big Data Management: Explores relational (SQL) and non-relational (NoSQL) databases. Covers database management, modeling, languages, consistency, architecture, and more.\nPro Git Book: A comprehensive resource for learning Git, covering everything from the basics to advanced topics by Scott Chacon and Ben Straub.\nOverview of Cloud Computing: An introductory textbook on cloud computing by Michael Wufka and Massimo Canonico."
  },
  {
    "objectID": "syllabus.html#additional-references",
    "href": "syllabus.html#additional-references",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Additional References",
    "text": "Additional References\n\nGoogle Cloud Computing Foundations: Google Cloud experts develop and maintain the Computing Foundations reference material specifically for university courses such as this to ensure it keeps pace with cloud innovation and to prepare students seeking to launch or pivot to careers in a cloud-first world.\nBig Data: Principles and best practices of scalable real-time data systems:: It describes a scalable, easy to understand approach to big data systems that can be built and run by a small team.\nVersion Control with Git: Powerful Tools and Techniques for Collaborative Software Development: This book explains how Git works and how to use it effectively. By Jon Loeliger and Matthew McCullough.\nGitHub Learning Lab: Offers a variety of exercises to get hands-on experience using Git and GitHub.\nAWS Academy Cloud Foundations (login required): AWS experts develop and maintain the Cloud Foundations reference material to ensure it keeps pace with cloud innovation and prepares students for real-world, industry challenges. This digital textbook with accompanying labs comes in the form of a Canvas page, separate from the class Canvas page."
  },
  {
    "objectID": "syllabus.html#assessment",
    "href": "syllabus.html#assessment",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Assessment",
    "text": "Assessment\nFinal grades will be based on:\n\n\n\nAssignment\nPercentage\n\n\n\n\nLecture Quizzes\n10%\n\n\nProblem Sets\n40%\n\n\nFinal Project Proposal\n5%\n\n\nFinal Project Submission\n25%\n\n\nFinal Project Presentation\n10%\n\n\nPeer Review\n10%\n\n\n\n\nLecture Quizzes\nEach lecture will be accompanied by a set of questions, available on the course’s Canvas page and to be completed individually. Students may complete these quizzes either during or after class, but must submit them by 11:59 p.m. on the lecture day. To accommodate the learning process, the lowest two quiz scores will be excluded from the final grade calculation. While individual submission is mandatory, collaborative discussions are encouraged. Please note that no extensions for quiz submissions will be granted under any circumstances, ensuring fairness and consistency in assessment for all students.\n\n\nProblem Sets\nProblem sets aligned with each topic will be assigned to solidify and apply the concepts covered. These sets are to be collaboratively developed in groups of up to three members, emphasizing the importance of code collaboration. Consequently, individual submissions will not be accepted. The primary objective of these problem sets is to provide a practical application of the content discussed during the semester. Assignments will be distributed via Canvas and/or GitHub, and may be formatted as either a Jupyter Notebook (.ipynb), Quarto documents (.qmd), or HTML (.html). Groups will be required to submit the complete source code of their assignments (.ipynb or .qmd). Each problem set will be meticulously evaluated, with grading based on both the accuracy and the overall quality of the work submitted. For instance, you must guarantee:\n\nAll code must run;\nEach problem set material will have its own GitHub repository;\nReadable Solutions: To facilitate effective evaluation and comprehension of the coding assignments, students must adhere to the following standards for code readability:\n\nComprehensive Commenting: All code must include thorough comments. These comments are essential as they allow the Professor and Teaching Assistants to understand the purpose and functionality of the code solely through these annotations. It is crucial that the comments are clear and concise, providing insight into the logic and purpose behind each segment of code.\n\n\nStructured Code Segmentation: Solutions should be methodically organized into distinct code chunks within Jupyter or R Markdown notebooks. For clarity on this format, refer to examples provided in class or consult with the Professor or Teaching Assistants.\n\n\nDetailed Documentation of Functions: Every function defined by a student must be accompanied by a docstring. This documentation should clearly explain the function’s purpose, describe each input argument, and outline what the function returns.\n\n\n\n\nFinal Project\nAt the heart of Data Science lies the critical skill of managing data effectively. This encompasses the ability to collect, organize, retrieve, filter, sort, and prepare data, forming the foundational steps before embarking on any comprehensive analysis. This project is your opportunity to demonstrate proficiency in applying the concepts and techniques learned throughout the course. In groups up to three members, you will be expected to showcase your competence in handling and preparing data for insightful analysis. Through this project, you will apply the principles and methodologies covered in the course.\n\nFinal Project Proposal\nEach group is required to submit a concise, yet comprehensive, two-page proposal outlining their intended project. This proposal is a crucial step in ensuring the viability and academic rigor of your planned research. Prior to its development, it is mandatory for each group to arrange a 15-minute consultation meeting with me. This meeting is intended to provide guidance, clarify objectives, and ensure alignment with course goals. To make the most of this consultation, groups must submit a draft of their project ideas in advance of the meeting. Please note that these consultation meetings will be scheduled during Week 10. It is imperative to adhere to this timeline to ensure timely feedback and guidance on your proposals.\n\n\nFinal Project Submission\nStudents are provided with two distinct opportunities to submit their final projects. The first submission is madatory for all groups and must be completed before the start of the presentation week. This phase allows for a preliminary assessment of your project. The subsequent submission is optional and should occur by the course’s last date. This opportunity is particularly beneficial for incorporating improvements based on peer review feedback received after the first submission. The final deliverable should be a comprehensive GitHub repository and a .zip file encompassing the following components:\n\nRaw Source Data: Include the raw data utilized for your project. If the data file size exceeds GitHub’s limitations, it should be exclusively contained within the .zip file.\nDetailed README: Your repository should contain a README file providing an in-depth description of each included file, covering:\n\nInputs: Detail the inputs to each file, such as raw data or files containing credentials for API access.\nFunctionality: Clearly describe the major transformations and operations performed by the file.\nOutputs: Enumerate any outputs generated by the file (e.g. cleaned datasets).\n\nData Transformation and Organization Code: Submit all code files that are used to transform and organize your data.\nData Query for Analysis: Provide the set of code files that query your dataset, rendering it suitable for addressing your chosen data analysis question.\n\nFurther details and specific requirements will be shared before Week 10 of the course.\n\n\nFinal Project Presentation\nDuring the final week of the course, each group will have a 10 to 15-minute time slot to present their project. This presentation is a vital component of your project, providing an opportunity to showcase the depth of your analysis, the insights gained, and the skills acquired throughout the course. The scheduling of presentations will be randomly defined. Specific dates and the order of presentations for each group will be assigned and communicated in advance.\nFurther details and specific requirements will be shared before Week 13 of the course.\n\n\n\nPeer Review\nIn the week of presentations, your active participation in the peer review process will be essential. Each student is expected to engage constructively in evaluating and providing feedback on their colleagues’ projects. You will be asked to thoughtfully comment on various aspects of the projects, including methodology, data structure, presentation features, and the overall effectiveness of the conveyed message. This exercise is not only a crucial part of your learning experience but also an opportunity to contribute to the academic development of your peers."
  },
  {
    "objectID": "syllabus.html#grading",
    "href": "syllabus.html#grading",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Grading",
    "text": "Grading\nEach student’s final grade will be based on the following after rounding up to the nearest point:\n\n\n\nGrade\nRange\n\n\n\n\nA\n91% – 100%\n\n\nA-\n86% – 90%\n\n\nB+\n81% – 85%\n\n\nB\n76% – 80%\n\n\nB-\n71% – 75%\n\n\nC\n66% – 70%\n\n\nD\n60% – 65%\n\n\nF\n&lt; 60%"
  },
  {
    "objectID": "syllabus.html#ai-policy",
    "href": "syllabus.html#ai-policy",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "AI policy",
    "text": "AI policy\nI encourage you to use AI tools you believe will enhance your individual or group performance. Learning to use AI is a valuable and emerging skill, and I am available to provide support and assistance with these tools during office hours or by appointment.\nBe aware of the following guidelines:\n\nYou are not allowed to use AI tools during the exams.\nProviding low-effort prompts will result in low-quality outputs. You must refine your prompts to achieve desirable outcomes. Use the course knowledge for that!\nDo not blindly trust the information provided by the output. If the output contains a number, index, analysis, conclusion, or fact, assume it is incorrect and check its veracity. Any errors or omissions resulting from using the AI tool will be your responsibility. Remember, the AI tool works better for topics that you already understand.\nWhile AI is a tool, you must acknowledge its use. Always cite! Include a paragraph or note at the end of any document to mention that you used AI on its development."
  },
  {
    "objectID": "syllabus.html#academic-integrity",
    "href": "syllabus.html#academic-integrity",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Academic Integrity",
    "text": "Academic Integrity\nUpon every individual who is a part of Emory University falls the responsibility for maintaining in the life of Emory a standard of unimpeachable honor in all academic work. The Honor Code of Emory College is based on the fundamental assumption that every loyal person of the University not only will conduct his or her own life according to the dictates of the highest honor, but will also refuse to tolerate in others action which would sully the good name of the institution. Academic misconduct is an offense generally defined as any action or inaction which is offensive to the integrity and honesty of the members of the academic community. The typical sanction for a violation of the Emory Honor Code is an F in the course. Any suspected case of academic misconduct will be referred to the Emory Honor Council."
  },
  {
    "objectID": "syllabus.html#communication",
    "href": "syllabus.html#communication",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Communication",
    "text": "Communication\n\nCheck the Course Website and Canvas Page regularly to keep yourself informed with up-to-date information about the course. Also, be sure to check the course syllabus before asking any questions about the course schedule/policies.\nIf you cannot attend the office hours due to conflicts with other course schedule or attending the university-sanctioned events (proof required), email the instructor at least two days in advance to set up an appointment. Note that each appointment will be 15-minutes long, and it may be done in a small group or individually. No appointments will be allowed nearing the exam dates.\nWhen attending virtual office hours, make sure you are in a private setting with a little to no background noise. The use of headphones is strongly encouraged. This is especially true when you are discussing private matters with the instructor.\nDo not use email for asking content-related questions, and do not use Canvas messages.\nDo not email me your private stories. Keep your email brief, and you will receive a response from me within 48 hours, except for the weekends. Similarly, if you receive an email from me, you are also expected to respond within 48 hours. Set up an individual appointment to discuss such things.\nFinally, if you are experiencing situations that negatively impact your overall student life, you should immediately contact the Office of Undergraduate Education."
  },
  {
    "objectID": "syllabus.html#regarding-absences",
    "href": "syllabus.html#regarding-absences",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Regarding absences",
    "text": "Regarding absences\n\nIf you miss a lecture for any reasons, understand that you are still responsible for the missed course materials. First, review the missed materials, then you may attend the instructor office hours to ask specific questions.\nAttendance is not monitored in lecture except on the exam dates.\nEmory College of Arts and Sciences policy states, “A student who fails to take any required midterm or final examination at the scheduled time may not make up the examination without written permission from a dean in the Office for Undergraduate Education. Permission will be granted only for illness or other compelling reasons, such as participation in scheduled events off-campus as an official representative of the University."
  },
  {
    "objectID": "syllabus.html#access-and-disability-resources",
    "href": "syllabus.html#access-and-disability-resources",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Access and Disability Resources",
    "text": "Access and Disability Resources\nStudents with medical/health conditions that might impact academic success should visit the Department of Accessibility Services (DAS) to determine eligibility for appropriate accommodations. Students who receive accommodations must contact the instructor with an Accommodation Letter from the DAS at the beginning of the semester, or as soon as the accommodation is granted. If you have DAS accommodations, you must inform the instructor after confirming that your accommodation letter is available in the DAS web portal. The instructor will respond to your email confirming which accommodations you will receive for this class. If you wish to do so, you may request an individual meeting to further discuss the specific accommodations."
  },
  {
    "objectID": "syllabus.html#subject-to-change-policy",
    "href": "syllabus.html#subject-to-change-policy",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Subject to Change Policy",
    "text": "Subject to Change Policy\nWhile I will try to adhere to the course schedule as much as possible, I also want to adapt to your learning pace and style. The syllabus and course plan may change in the semester."
  },
  {
    "objectID": "syllabus.html#schedule",
    "href": "syllabus.html#schedule",
    "title": "Syllabus: QTM 350 - Data Science Computing",
    "section": "Schedule",
    "text": "Schedule"
  },
  {
    "objectID": "lecture_material/material-topic-01/intro-to-quarto-class.html",
    "href": "lecture_material/material-topic-01/intro-to-quarto-class.html",
    "title": "Topic 1: Introduction to Quarto for Python",
    "section": "",
    "text": "The document offers a short guide on utilizing Quarto effectively for data science projects with R and Python.[1]"
  },
  {
    "objectID": "lecture_material/material-topic-01/intro-to-quarto-class.html#quick-tutorial-for-rstudio",
    "href": "lecture_material/material-topic-01/intro-to-quarto-class.html#quick-tutorial-for-rstudio",
    "title": "Topic 1: Introduction to Quarto for Python",
    "section": "Quick tutorial for RStudio",
    "text": "Quick tutorial for RStudio\nThis is what RStudio looks like when you open it for the first time.\n\n\n\n\n\nTop left pane (input/script)\nThis is your code editor. Here you enter code in any file type (.py, .r, .qmd) you are working on. If not working with notebooks, this is just gonna be a plain text file but with a extension that run the commands.\nFor example, enter 2 + 2 in your script and run a line of code by pressing command + enter (Mac) or Ctrl + enter (PC). This is a huge advantage of Rstudio over Jupyter. You can run your code line by line, instead of running the entire cell.\nBottom left pane (output/console)\nThis is the console. It is pretty much like when you open Python/R from the Command line.\nIn the console, the prompt &gt; looks like a greater than symbol. If your prompt begins to look like a + symbol by mistake, simply click in your console and press the esc key on your keyboard as many times as necessary to return to the prompt.\nRstudio uses + when code is broken up across multiple lines and is still expecting more code. A line of code does not usually end until Rstudio finds an appropriate stop parameter or punctuation that completes some code such as a closed round parenthesis ), square bracket ], curly brace }, or quotation mark '.\nIf the output in your console gets too messy, you can clear it by pressing control + l on both Mac and PC. This will not erase any saved data - it will simply make your console easier to read.\nTop right pane (global environment)\nThis is your environment pane. All objects you create will be displayed here.\nBottom right pane (files, plots, packages, and help)\nHere you find useful tabs for navigating your file system, displaying plots, installing packages, and viewing help pages. Press the control key and a number (1 through 9) on your keyboard to shortcut between these panes and tabs."
  },
  {
    "objectID": "lecture_material/material-topic-01/quarto_python_example-class.html",
    "href": "lecture_material/material-topic-01/quarto_python_example-class.html",
    "title": "Quarto Python Example",
    "section": "",
    "text": "Here you can add your markdown text."
  },
  {
    "objectID": "lecture_material/material-topic-01/quarto_python_example-class.html#example-of-using-python-with-quarto",
    "href": "lecture_material/material-topic-01/quarto_python_example-class.html#example-of-using-python-with-quarto",
    "title": "Quarto Python Example",
    "section": "",
    "text": "Here you can add your markdown text."
  },
  {
    "objectID": "lecture_material/material-topic-01/quarto_python_example-class.html#code",
    "href": "lecture_material/material-topic-01/quarto_python_example-class.html#code",
    "title": "Quarto Python Example",
    "section": "Code",
    "text": "Code\nIn the code chunk, you just need to change the programming language you want to use inside of the brackets {}\n\n# R code chunck\n\nlibrary(ggplot2)\n\nmu &lt;- 0\nsigma &lt;- 1\nx &lt;- seq(mu - 3*sigma, mu + 3*sigma, length.out = 100)\ny &lt;- dnorm(x, mean = mu, sd = sigma)\ndata &lt;- data.frame(x, y)\n\nggplot(data, aes(x, y)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"Standard Normal Distribution\", x = \"X\", y = \"Density\")\n\n\n\n\n\n# Python code chunck\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.stats as stats\nimport math\n\nmu = 0\nvariance = 1\nsigma = math.sqrt(variance)\nx = np.linspace(mu - 3*sigma, mu + 3*sigma, 100)\nplt.plot(x, stats.norm.pdf(x, mu, sigma))\nplt.show()"
  }
]